---
# this was developed against Ubuntu 18.04
# ansible-playbook nginx_controller_postgresql_install.yaml -i dbserver -e "db_password=mySecureString"

- hosts: dbserver
  remote_user: ubuntu
  become: true
  become_method: sudo 

  tasks:
  - name: "Working around apt bug"
    apt:
      name: aptitude
      state: latest
      update_cache: yes

  - name: "Ensure bash, OpenSSl, and libssl are the latest versions"
    apt: 
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - bash
        - openssl
        - libssl-dev
        - libssl-doc
        - python-apt
        - libpq-dev
        - python-psycopg2
    tags: packages

  - name: "add postgresql apt-key"
    apt_key:
      url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
      state: present
      
  - name: "add postgresql repository"
    apt_repository:
      repo: "deb http://apt.postgresql.org/pub/repos/apt/ bionic-pgdg main"
      state: present
      filename: postgresql
      update_cache: yes

#  - name: "add postgresql repository"
#    apt_repository:
#      repo: "deb http://apt.postgresql.org/pub/repos/apt/ xenial-pgdg main"
#      state: present
#      filename: postgresql
#      update_cache: yes

  - name: "Working around locale issue"
    apt:
      name: language-pack-en
      state: present

  - name: "ensure locale exists"
    locale_gen:
      name: en_US.UTF-8
      state: present

  - name: Install PostgreSQL
    apt:
      name: "{{ packages }}"
      state: present
      update_cache: yes
    vars:
      packages:
        - postgresql-12
        - postgresql-contrib-12
#        - postgresql-9.5 
#        - postgresql-contrib-9.5
    tags: packages

  - name: Ensure the PostgreSQL service is running
    service: 
      name: postgresql
      state: started
      enabled: yes

  - name: wait a minute for PostgreSQL to get running
    pause:
      seconds: 30

  - name: test postgresql version
    become: true
    become_user: postgres
    postgresql_query:
      db: postgres
      query: SELECT version()
    register: postgre
    until: (postgre is defined)
    retries: 5
    delay: 2

  - set_fact: 
      postgrever: "{{postgre.query_result}}"

  - debug: 
      var: postgrever[0].version

  - name: Ensure database is created
    become: true
    become_user: postgres
    postgresql_db: 
      name: naas
      encoding: UTF-8
      lc_collate: en_US.UTF-8
      lc_ctype: en_US.UTF-8
      template: template0
      state: present

  - name: Ensure user has access to the database
    become: true
    become_user: postgres
    postgresql_user:
      db: naas
      name: naas
      password: "{{ db_password }}"  # issue with special characters being passed
      priv: ALL
      state: present

  - name: Ensure user does not have unnecessary privileges
    become: true
    become_user: postgres
    postgresql_user:
      name: naas
      role_attr_flags: NOSUPERUSER,CREATEDB
      state: present

  - name: find pg_hba.conf
    become: true
    become_user: postgres
    postgresql_query:
      db: postgres
      query: SHOW hba_file
    register: hba
    until: (hba is defined)
    retries: 5
    delay: 2

  - name: find postgresql.conf
    become: true
    become_user: postgres
    postgresql_query:
      db: postgres
      query: SHOW config_file
    register: pgconf
    until: (pgconf is defined)
    retries: 5
    delay: 2

# /etc/postgresql/9.5/main/postgresql.conf

  - name: enable access from any source
    lineinfile:
      dest: "{{ hba.query_result[0].hba_file }}"
      line: host all all 0.0.0.0/0 md5
      insertafter: EOF
      state: present

  - name: enable any interface
    lineinfile:
      dest: "{{ pgconf.query_result[0].config_file }}"
      line: listen_addresses='*'
      insertafter: EOF
      state: present

  - name: increase connection count
    lineinfile:
      dest: "{{ pgconf.query_result[0].config_file }}"
      line: 'max_connections = 200'
      regexp: 'max_connections'
      state: present

  - name: restart postgresql
    service:
      name: postgresql
      state: restarted
